{"version":3,"sources":["common/propertyFieldHeader/IPropertyFieldHeader.ts"],"names":[],"mappings":";;AAEA;;GAEG;AACH,IAAY,eAGX;AAHD,WAAY,eAAe;IACvB,uDAAS,CAAA;IACT,uDAAK,CAAA;AACT,CAAC,EAHW,eAAe,GAAf,uBAAe,KAAf,uBAAe,QAG1B","file":"common/propertyFieldHeader/IPropertyFieldHeader.js","sourcesContent":["import * as React from 'react';\n\n/**\n * Enum to describe possible events to show callout\n */\nexport enum CalloutTriggers {\n    Click = 1,\n    Hover\n}\n\n/**\n * Interface that discibes available settings of Header callout\n */\nexport interface IPropertyFieldHeaderCalloutProps {\n    /**\n     * Callout content - any HTML\n    */\n    calloutContent?: React.ReactNode;\n    /**\n     * Custom width for callout including borders. If value is 0, no width is applied.\n     */\n    calloutWidth?: number;\n    /**\n     * Event to show the callout\n     */\n    calloutTrigger?: CalloutTriggers;\n    /**\n     * The gap between the Callout and the target\n     */\n    gapSpace?: number;\n}\n\n/**\n * PropertyFieldHeader component props\n */\nexport interface IPropertyFieldHeaderProps extends IPropertyFieldHeaderCalloutProps {\n    /**\n     * The label to be shown in the header\n     */\n    label?: string;\n}\n\n/**\n * PropertyFieldHeader component state\n */\nexport interface IPropertyFieldHeaderState {\n    /**\n     * Flag if the callout is currently visible\n     */\n    isCalloutVisible?: boolean;\n}\n"],"sourceRoot":"..\\..\\..\\src"}