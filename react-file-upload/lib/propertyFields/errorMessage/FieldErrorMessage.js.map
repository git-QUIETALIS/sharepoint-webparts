{"version":3,"sources":["propertyFields/errorMessage/FieldErrorMessage.tsx"],"names":[],"mappings":";;;;;;;;;;;;AAAA,6BAA+B;AAQ/B;;GAEG;AACH;IAA+C,qCAAwC;IAAvF;;IAcA,CAAC;IAbQ,kCAAM,GAAb;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,KAAK,WAAW,IAAI,IAAI,CAAC,KAAK,CAAC,YAAY,KAAK,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,YAAY,KAAK,EAAE,CAAC,CAAC,CAAC;YAClH,MAAM,CAAC,CACL,6BAAK,KAAK,EAAE,EAAE,aAAa,EAAE,KAAK,EAAE;gBAAE,0CAAe,WAAW,EAAC,SAAS,EAAC,uBAAuB,wBAAoB,eAAe,IAAE,IAAI,CAAC,KAAK,CAAC,YAAY,CAAO;gBACnK;oBACE,2BAAG,SAAS,EAAC,8CAA8C,IAAE,IAAI,CAAC,KAAK,CAAC,YAAY,CAAK,CACpF,CACH,CACP,CAAC;QACJ,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,gCAAO,CAAC;QACjB,CAAC;IACH,CAAC;IACH,wBAAC;AAAD,CAdA,AAcC,CAd8C,KAAK,CAAC,SAAS,GAc7D","file":"propertyFields/errorMessage/FieldErrorMessage.js","sourcesContent":["import * as React from 'react';\n\n\nexport interface IFieldErrorMessageProps {\n\n  errorMessage: string;\n}\n\n/**\n * Component that shows an error message when something went wront with the property control\n */\nexport default class FieldErrorMessage extends React.Component<IFieldErrorMessageProps> {\n  public render(): JSX.Element {\n    if (this.props.errorMessage !== 'undefined' && this.props.errorMessage !== null && this.props.errorMessage !== '') {\n      return (\n        <div style={{ paddingBottom: '8px' }}><div aria-live='assertive' className='ms-u-screenReaderOnly' data-automation-id='error-message'>{this.props.errorMessage}</div>\n          <span>\n            <p className='ms-TextField-errorMessage ms-u-slideDownIn20'>{this.props.errorMessage}</p>\n          </span>\n        </div>\n      );\n    } else {\n      return <div />;\n    }\n  }\n}\n"],"sourceRoot":"..\\..\\..\\src"}