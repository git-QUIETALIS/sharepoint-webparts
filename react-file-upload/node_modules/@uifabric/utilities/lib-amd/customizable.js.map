{"version":3,"file":"customizable.js","sourceRoot":"../src/","sources":["customizable.tsx"],"names":[],"mappings":";;;IAIA,sBACE,KAAa,EACb,MAAgB;QAChB,kCAAkC;;QAGlC,gDAAgD;QAChD,MAAM,CAAC;YACL,kCAAkC;YAClC,iBAA4E;YAC5E,kCAAkC;;YAElC,MAAM;oBAA0C,sDAAsB;oBASpE,kCAAkC;oBAClC,oCAAY,KAAQ,EAAE,OAAY;wBAAlC,YACE,kBAAM,KAAK,EAAE,OAAO,CAAC,SAGtB;wBADC,KAAI,CAAC,iBAAiB,GAAG,KAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;;oBAC7D,CAAC;oBAEM,sDAAiB,GAAxB;wBACE,+BAAc,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;oBACjD,CAAC;oBAEM,yDAAoB,GAA3B;wBACE,+BAAc,CAAC,SAAS,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;oBACnD,CAAC;oBAEM,2CAAM,GAAb;wBACE,IAAM,YAAY,GAAG,+BAAc,CAAC,WAAW,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;wBAE5F,MAAM,CAAC;wBACL,kCAAkC;wBAClC,oBAAC,iBAAiB,uBAAM,YAAY,EAAQ,IAAI,CAAC,KAAY,EAAK,CACnE,CAAC;oBACJ,CAAC;oBAEO,sDAAiB,GAAzB;wBACE,IAAI,CAAC,WAAW,EAAE,CAAC;oBACrB,CAAC;oBAEH,iCAAC;gBAAD,CAAC,AArCM,CAAyC,KAAK,CAAC,SAAS;gBAC/C,cAAW,GAAW,YAAY,GAAG,KAAM;gBAE3C,eAAY,GAEtB;oBACF,cAAc,EAAE,SAAS,CAAC,MAAM;iBAChC;mBA8BF;;QACJ,CAAC,CAAC;IACJ,CAAC;IAnDD,oCAmDC","sourcesContent":["import * as React from 'react';\r\nimport * as PropTypes from 'prop-types';\r\nimport { Customizations } from './Customizations';\r\n\r\nexport function customizable(\r\n  scope: string,\r\n  fields: string[]\r\n  // tslint:disable-next-line:no-any\r\n): <P, S>(ComposedComponent: new (props: P, ...args: any[]) => React.Component<P, S>) => any {\r\n\r\n  // tslint:disable-next-line:no-shadowed-variable\r\n  return function customizableFactory<P, S>(\r\n    // tslint:disable-next-line:no-any\r\n    ComposedComponent: (new (props: P, ...args: any[]) => React.Component<P, S>)\r\n    // tslint:disable-next-line:no-any\r\n  ): any {\r\n    return class ComponentWithInjectedProps extends React.Component<P, {}> {\r\n      public static displayName: string = 'Customized' + scope;\r\n\r\n      public static contextTypes: {\r\n        customizations: PropTypes.Requireable<{}>;\r\n      } = {\r\n        customizations: PropTypes.object\r\n      };\r\n\r\n      // tslint:disable-next-line:no-any\r\n      constructor(props: P, context: any) {\r\n        super(props, context);\r\n\r\n        this._onSettingChanged = this._onSettingChanged.bind(this);\r\n      }\r\n\r\n      public componentDidMount(): void {\r\n        Customizations.observe(this._onSettingChanged);\r\n      }\r\n\r\n      public componentWillUnmount(): void {\r\n        Customizations.unobserve(this._onSettingChanged);\r\n      }\r\n\r\n      public render(): JSX.Element {\r\n        const defaultProps = Customizations.getSettings(fields, scope, this.context.customizations);\r\n\r\n        return (\r\n          // tslint:disable-next-line:no-any\r\n          <ComposedComponent { ...defaultProps } { ...this.props as any } />\r\n        );\r\n      }\r\n\r\n      private _onSettingChanged(): void {\r\n        this.forceUpdate();\r\n      }\r\n\r\n    };\r\n  };\r\n}\r\n"]}