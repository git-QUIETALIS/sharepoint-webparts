{"version":3,"file":"theme.js","sourceRoot":"../src/","sources":["styles/theme.ts"],"names":[],"mappings":"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","sourcesContent":["import { Customizations } from '@uifabric/utilities/lib/Customizations';\r\nimport {\r\n  IPalette,\r\n  ISemanticColors,\r\n  ITheme,\r\n  IPartialTheme\r\n} from '../interfaces/index';\r\nimport {\r\n  DefaultFontStyles\r\n} from './DefaultFontStyles';\r\nimport {\r\n  DefaultPalette\r\n} from './DefaultPalette';\r\nimport { loadTheme as legacyLoadTheme } from '@microsoft/load-themed-styles';\r\n\r\nlet _theme: ITheme = {\r\n  palette: DefaultPalette,\r\n  semanticColors: _makeSemanticColorsFromPalette(DefaultPalette, false),\r\n  fonts: DefaultFontStyles,\r\n  isInverted: false\r\n};\r\nlet _onThemeChangeCallbacks: Array<(theme: ITheme) => void> = [];\r\n\r\nexport const ThemeSettingName = 'theme';\r\n\r\nif (!Customizations.getSettings([ThemeSettingName]).theme) {\r\n  let win = typeof window !== 'undefined' ? window : undefined;\r\n\r\n  // tslint:disable:no-string-literal no-any\r\n  if (win && (win as any)['FabricConfig'] && (win as any)['FabricConfig'].theme) {\r\n    _theme = createTheme((win as any)['FabricConfig'].theme);\r\n  }\r\n  // tslint:enable:no-string-literal no-any\r\n\r\n  // Set the default theme.\r\n  Customizations.applySettings({ [ThemeSettingName]: _theme });\r\n}\r\n\r\n/**\r\n * Gets the theme object.\r\n */\r\nexport function getTheme(): ITheme {\r\n  return _theme;\r\n}\r\n\r\n/**\r\n * Registers a callback that gets called whenever the theme changes.\r\n * This should only be used when the component cannot automatically get theme changes through its state.\r\n * This will not register duplicate callbacks.\r\n */\r\nexport function registerOnThemeChangeCallback(callback: (theme: ITheme) => void): void {\r\n  if (_onThemeChangeCallbacks.indexOf(callback) === -1) {\r\n    _onThemeChangeCallbacks.push(callback);\r\n  }\r\n}\r\n\r\n/**\r\n * See registerOnThemeChangeCallback().\r\n * Removes previously registered callbacks.\r\n */\r\nexport function removeOnThemeChangeCallback(callback: (theme: ITheme) => void): void {\r\n  const i = _onThemeChangeCallbacks.indexOf(callback);\r\n  if (i === -1) {\r\n    return;\r\n  }\r\n\r\n  _onThemeChangeCallbacks.splice(i, 1);\r\n}\r\n\r\n/**\r\n * Applies the theme, while filling in missing slots.\r\n */\r\nexport function loadTheme(theme: IPartialTheme): ITheme {\r\n  _theme = createTheme(theme);\r\n\r\n  // Invoke the legacy method of theming the page as well.\r\n  legacyLoadTheme({ ..._theme.palette, ..._theme.semanticColors });\r\n\r\n  Customizations.applySettings({ [ThemeSettingName]: _theme });\r\n\r\n  _onThemeChangeCallbacks.forEach((callback: (theme: ITheme) => void) => {\r\n    try {\r\n      callback(_theme);\r\n    } catch (e) {\r\n      // don't let a bad callback break everything else\r\n    }\r\n  });\r\n\r\n  return _theme;\r\n}\r\n\r\n/**\r\n * Creates a custom theme definition which can be used with the Customizer.\r\n */\r\nexport function createTheme(theme: IPartialTheme): ITheme {\r\n  let newPalette = { ...DefaultPalette, ...theme.palette };\r\n\r\n  if (!theme.palette || !theme.palette.accent) {\r\n    newPalette.accent = newPalette.themePrimary;\r\n  }\r\n\r\n  return {\r\n    palette: newPalette,\r\n    fonts: {\r\n      ...DefaultFontStyles,\r\n      ...theme.fonts\r\n    },\r\n    semanticColors: { ..._makeSemanticColorsFromPalette(newPalette, !!theme.isInverted), ...theme.semanticColors },\r\n    isInverted: !!theme.isInverted\r\n  } as ITheme;\r\n}\r\n\r\n// Generates all the semantic slot colors based on the Fabric palette.\r\n// We'll use these as fallbacks for semantic slots that the passed in theme did not define.\r\nfunction _makeSemanticColorsFromPalette(p: IPalette, isInverted: boolean): ISemanticColors {\r\n  return {\r\n    bodyBackground: p.white,\r\n    bodyText: p.neutralPrimary,\r\n    bodyTextChecked: p.black,\r\n    bodySubtext: p.neutralSecondary,\r\n    bodyDivider: p.neutralLight,\r\n\r\n    disabledBackground: p.neutralLighter,\r\n    disabledText: p.neutralTertiary,\r\n    disabledBodyText: p.neutralTertiaryAlt,\r\n    disabledSubtext: p.neutralQuaternary,\r\n\r\n    focusBorder: p.black,\r\n\r\n    errorText: !isInverted ? p.redDark : '#ff5f5f',\r\n    warningText: !isInverted ? '#333333' : '#ffffff',\r\n    errorBackground: !isInverted ? 'rgba(232, 17, 35, .2)' : 'rgba(232, 17, 35, .5)',\r\n    blockingBackground: !isInverted ? 'rgba(234, 67, 0, .2)' : 'rgba(234, 67, 0, .5)',\r\n    warningBackground: !isInverted ? 'rgba(255, 185, 0, .2)' : 'rgba(255, 251, 0, .6)',\r\n    warningHighlight: !isInverted ? '#ffb900' : '#fff100',\r\n    successBackground: !isInverted ? 'rgba(186, 216, 10, .2)' : 'rgba(186, 216, 10, .4)',\r\n\r\n    inputBorder: p.neutralTertiary,\r\n    inputBorderHovered: p.neutralDark,\r\n    inputBackgroundChecked: p.themePrimary,\r\n    inputBackgroundCheckedHovered: p.themeDarkAlt,\r\n    inputForegroundChecked: p.white,\r\n    inputFocusBorderAlt: p.themePrimary,\r\n\r\n    buttonBackground: p.neutralLighter,\r\n    buttonBackgroundChecked: p.neutralTertiaryAlt,\r\n    buttonBackgroundHovered: p.neutralLight,\r\n    buttonBackgroundCheckedHovered: p.neutralLight,\r\n    buttonBorder: 'transparent',\r\n    buttonText: p.neutralPrimary,\r\n    buttonTextHovered: p.black,\r\n    buttonTextChecked: p.neutralDark,\r\n    buttonTextCheckedHovered: p.black,\r\n\r\n    menuItemBackgroundHovered: p.neutralLighter,\r\n    menuItemBackgroundChecked: p.neutralLight,\r\n    menuIcon: p.themePrimary,\r\n    menuHeader: p.themePrimary,\r\n\r\n    listBackground: p.white,\r\n    listTextColor: p.neutralPrimary,\r\n    listItemBackgroundHovered: p.neutralLighter,\r\n    listItemBackgroundChecked: p.neutralLight,\r\n    listItemBackgroundCheckedHovered: p.neutralQuaternaryAlt\r\n  };\r\n}\r\n"]}